{"version":3,"sources":["authorisation_store.js"],"names":[],"mappings":";;;;;;;;;;;;;IAGqB,kBAAkB;WAAlB,kBAAkB;0BAAlB,kBAAkB;;;eAAlB,kBAAkB;;;;;;;;;WAalC,aAAC,GAAG,EAAE,KAAK,EAAE,EAEf;;;;;;;;;;WAQE,aAAC,GAAG,EAAE,EAER;;;;;;;;;WAOK,iBAAC,GAAG,EAAE,EAEX;;;;;;;;WAMG,gBAAG,EAEN;;;;;;;;;;WASO,kBAAC,GAAG,EAAE,EAEb;;;;;;;;SA/CQ,eAAG,EAAE;;;SANK,kBAAkB;;;qBAAlB,kBAAkB","file":"authorisation_store.js","sourcesContent":["/**\n * @interface\n */\nexport default class AuthorizationStore {\n\n  /**\n   * the query params the user is currently showing\n   * @type {object}\n   */\n  get query() {};\n  /**\n   * sets and saves a value against the store\n   * @param {string} key - the key to store the value against\n   * @param {object} value - the value to store\n   * @returns {Promise} - a promise to have saved the value\n   */\n  set(key, value) {\n\n  }\n\n  /**\n   * gets a value saved against the specified key\n   *\n   * @param {string} key - the key the value is saved against\n   * @returns {object} - the value at the specified key or null\n   */\n  get(key) {\n\n  }\n\n  /**\n   * removes any value saved against the specified key permanently\n   * @param {string} key - the key the value is saved against\n   * @returns {Promise} - a promise to have deleted the value from the store\n   */\n  delete(key) {\n\n  }\n\n  /**\n   * mark the current authorization flow as complete i.e. after having swapped all access tokens and request tokens\n   * @returns {undefined}\n   */\n  done() {\n\n  }\n\n\n  /**\n   * redirect the user to the specified uri\n   * the user is no longer present after this call so should only happen at the end of a flow\n   * @param {string} uri - the uri to redirect the user to\n   * @returns {undefined}\n   */\n  redirect(uri) {\n\n  }\n\n\n}\n"],"sourceRoot":"/source/"}